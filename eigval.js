// Generated by LiveScript 1.3.1
var Matrix;
Matrix = (function(){
  Matrix.displayName = 'Matrix';
  var prototype = Matrix.prototype, constructor = Matrix;
  function Matrix(A11, A12, A21, A22, board){
    var v, va, v2, va2, this$ = this;
    this.setMatrix = bind$(this, 'setMatrix', prototype);
    this.mat = [A11, A12, A21, A22];
    this.b = JXG.JSXGraph.initBoard(board, {
      boundingbox: [-10, 10, 10, -10],
      axis: true,
      grid: false,
      showNavigation: false,
      showCopyright: false
    });
    this.b.suspendUpdate();
    v = this.b.create('point', [2, 2], {
      face: 'o',
      size: 2,
      name: 'v'
    });
    va = this.b.create('arrow', [[0, 0], v]);
    v2 = this.b.create('point', [
      function(){
        return this$.mat[0] * v.X() + this$.mat[1] * v.Y();
      }, function(){
        return this$.mat[2] * v.X() + this$.mat[3] * v.Y();
      }
    ], {
      face: 'o',
      size: 2,
      name: 'v\'',
      fillColor: 'black',
      strokeColor: 'black'
    });
    va2 = this.b.create('arrow', [[0, 0], v2], {
      strokeColor: 'black',
      strokeWidth: 1
    });
    this.b.unsuspendUpdate();
  }
  prototype.setMatrix = function(A11, A12, A21, A22){
    this.b.suspendUpdate();
    this.mat[0] = A11;
    this.mat[1] = A12;
    this.mat[2] = A21;
    this.mat[3] = A22;
    return this.b.unsuspendUpdate();
  };
  return Matrix;
}());
function enter_matrix(A, form){
  var f, x$, id, ref$, a, b, c, d;
  f = document.getElementById(form).elements;
  x$ = A.setMatrix;
  ref$ = (function(){
    var i$, ref$, len$, results$ = [];
    for (i$ = 0, len$ = (ref$ = ['a11', 'a12', 'a21', 'a22']).length; i$ < len$; ++i$) {
      id = ref$[i$];
      results$.push(parseFloat(
      f.namedItem(id).value));
    }
    return results$;
  }()), a = ref$[0], b = ref$[1], c = ref$[2], d = ref$[3];
  x$(a, b, c, d);
}
function bind$(obj, key, target){
  return function(){ return (target || obj)[key].apply(obj, arguments) };
}